<template>
    <view class="step-list">
        <repeat for="{{list}}" itme="item" index="index">
            <view id="step-index-{{index}}" class="step-item {{movingIndex === index ? 'moving': ''}}"
                  data-index="{{index}}" style="top: {{offsetTop}}px;"
                  @touchstart="onStartTouch" @touchmove="onTouchMove"
                  @touchend="onTouchEnd" @touchcancel="onTouchEnd" @longpress="onLongPress">
                <step :stepData="item" :index="index"></step>
            </view>
        </repeat>
    </view>
</template>
<script>
    import wepy from 'wepy'
    import step from './step'

    let sy, my
    let isPrepareDragging = false

    export default class StepList extends wepy.component {
        props = {
            list: {
                twoWay: true
            }
        }

        components = {
            'step': step
        }

        data = {
            offsetTopList: [],
            movingIndex: -1,
            offsetTop: 0,
            opacity: 1
        }
        events = {

        }

        methods = {
            onLongPress(e) {
                isPrepareDragging = true
                this.movingIndex = +e.currentTarget.dataset.index
                this.$emit('disable-scroll')
            },
            onStartTouch(e) {
                this.getOffsetTopList()
                sy = e.touches[0].clientY
            },
            onTouchMove(e) {
                if (isPrepareDragging) {
                    my = e.touches[0].clientY
                    let distance = my - sy
                    this.offsetTop += distance
                    sy = my
                }
            },
            onTouchEnd(e) {
                if (isPrepareDragging) {
                    this.movingIndex = -1
                    this.offsetTop = 0
                    let distIndex = this.findStepItemIndex(e.currentTarget.offsetTop)
                    this.rebuildList(e.currentTarget.dataset.index, distIndex)
                    this.$apply()
                    isPrepareDragging = false
                    this.$emit('enable-scroll')
                }
            }
        }

        getOffsetTopList() {
            let offsets = []
            let selectQuery = wepy.createSelectorQuery()
            let $nodeRefs = selectQuery.selectAll('.step-item')
            $nodeRefs.boundingClientRect()
            selectQuery.exec(function(res) {
                res[0].forEach(item => {
                    offsets.push(item.top)
                })
            })
            this.offsetTopList = offsets
        }

        findStepItemIndex(offset) {
            let index = 0
            for (let i = 0, len = this.offsetTopList.length; i < len; i++) {
                if (offset <= this.offsetTopList[i]) {
                    index = i - 1
                    break
                } else if (offset >= this.offsetTopList[i] && offset < this.offsetTopList[i + 1]) {
                    index = i + 1
                    break
                } else if (offset > this.offsetTopList[len - 1]) {
                    index = len
                    break
                }
            }
            index = index < 0 ? 0 : index
            return index
        }

        rebuildList(oldIndex, newIndex) {
            if (oldIndex !== newIndex) {
                if (oldIndex > newIndex) {
                    let data = this.list[oldIndex]
                    this.list.splice(oldIndex, 1)
                    this.list.splice(newIndex, 0, data)
                } else {
                    let data = this.list[oldIndex]
                    this.list.splice(oldIndex, 1)
                    this.list.splice(newIndex, 0, data)
                }
            }
        }
    }
</script>
<style lang="less">
    .step-item.moving {
        position: relative;
        opacity: 0.7;
    }
</style>
