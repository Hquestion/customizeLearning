<template>
    <view class="arrange-container {{(!isUserLeader || !!queryParam) ? 'disable-edit': ''}}">
        <view class="nav">
            <navigator url="{{navigateUrlMap.prevKnow}}" open-type="redirect">早知道</navigator>
            <navigator class="active">会安排</navigator>
            <navigator url="{{navigateUrlMap.practice}}" open-type="{{navigateUrlMap.practiceOpenType}}">能落实</navigator>
            <navigator url="{{navigateUrlMap.think}}" open-type="redirect" hidden="{{isTeacher || !isStuInGroup}}">有反思</navigator>
        </view>
        <scroll-view scroll-y="{{scrollable}}" @scroll="onScroll">
            <step-list :list.sync="datalist" :editable.sync="stepEditable" :parentOffset.sync="parentScrollTop"></step-list>
        </scroll-view>
        <view class="button-block flex-box" hidden="{{!isUserLeader || !!queryParam}}">
            <view class="btn btn-add">
                <rich-button1 text="添加步骤" theme="grey" @tap.user="addStep" width="90%"></rich-button1>
            </view>
            <view class="btn btn-save">
                <rich-button2 text="保存" :theme.sync="saveBtnTheme" @tap.user="saveChange" width="90%"></rich-button2>
            </view>
        </view>
        <dialog class="add-step-dialog" :visible.sync="addStepDialogVisible">
            <view slot="title">{{addStepTitle}}</view>
            <view slot="main">
                <view class="content">
                    <input type="text" placeholder="请输入步骤名称" confirm-type="确定" value="{{stepName}}" @input="onNameInput"/>
                    <textarea maxlength="-1" fixed value="{{stepDesc}}" placeholder="请输入步骤详情" @input="onDescInput"></textarea>
                </view>
                <view class="dialog-btn">
                    <rich-button3 text="提交" theme="green" width="100%;" @tap.user="onSubmitAddStep"></rich-button3>
                </view>
            </view>
        </dialog>
    </view>
</template>

<script>
    import wepy from 'wepy'
    import stepList from '../../components/step-list'
    import richButton from '../../components/rich-button'
    import dialog from '../../components/dialog'

    import {getGroupDetail, getCourseArrangeList, saveGroupArrangeList, deleteArrange, isStuInCourseGroup} from '../../api'
    import {Step} from '../../model/Step'

    export default class Arrange extends wepy.page {
        config = {
            navigationBarTitleText: '会安排'
        }

        data = {
            parentScrollTop: 0,
            isTeacher: false,
            userInfo: null,
            isUserLeader: false,
            isChanged: false,
            scrollable: true,
            addStepDialogVisible: false,
            stepName: '',
            stepDesc: '',
            addStepTitle: '添加步骤',
            toEditStep: null,
            datalist: [],
            currentGroupInfo: null,
            queryParam: null,
            navigateUrlMap: {
                prevKnow: '/practice/pages/prevKnow',
                practice: '/pages/practice',
                practiceOpenType: 'switchTab',
                think: '/practice/pages/think'
            },
            stepEditable: false,
            isStuInGroup: false
        }

        components = {
            'step-list': stepList,
            'rich-button1': richButton,
            'rich-button2': richButton,
            'rich-button3': richButton,
            'dialog': dialog
        }

        computed = {
            saveBtnTheme() {
                return this.isChanged ? 'green' : 'grey'
            }
        }

        methods = {
            addStep() {
                this.addStepTitle = '添加步骤'
                this.toEditStep = null
                this.addStepDialogVisible = true
                this.$apply()
            },
            onSubmitAddStep() {
                if (this.toEditStep) {
                    // 编辑步骤处理
                    this.toEditStep.ArrangeName = this.stepName
                    this.toEditStep.modelList[0].ArrangeContent = this.stepDesc
                    this.$apply()
                } else {
                    // 添加步骤处理
                    let stepItem = new Step({
                        ArrangeName: this.stepName,
                        CourseFID: this.currentGroupInfo.CourseFID,
                        GroupFID: this.currentGroupInfo.GroupFID,
                        Creater: this.$parent.globalData.userInfo.FlnkID,
                        SortCode: this.datalist.length + 1,
                        ArrangeContent: this.stepDesc
                    })
                    this.datalist.push(stepItem)
                    this.$apply()
                }
                this.stepName = ''
                this.stepDesc = ''
                this.isChanged = true
                this.addStepDialogVisible = false
                this.$apply()
            },
            saveChange() {
                this.datalist.forEach((item, index) => {
                    item.SortCode = index + 1
                })
                saveGroupArrangeList(this.datalist).then(res => {
                    getCourseArrangeList(this.currentGroupInfo.CourseFID, this.currentGroupInfo.GroupFID).then(res => {
                        this.datalist = res
                        this.isChaned = false
                        this.$apply()
                        wepy.showToast({
                            title: '保存成功'
                        })
                    })
                })
            },
            onNameInput(e) {
                this.stepName = e.detail.value
            },
            onDescInput(e) {
                this.stepDesc = e.detail.value
            },
            onScroll(e) {
                this.parentScrollTop = e.detail.scrollTop
                this.$apply()
            }
        }

        events = {
            'disable-scroll': function () {
                this.scrollable = false
                this.$apply()
            },
            'enable-scroll': function() {
                this.scrollable = true
                this.isChanged = true
                this.$apply()
            },
            'edit-step': function(e) {
                this.addStepTitle = '编辑步骤'
                this.toEditStep = e
                this.stepName = e.ArrangeName
                this.stepDesc = (e.modelList[0] && e.modelList[0].ArrangeContent) || ''
                this.addStepDialogVisible = true
                this.$apply()
            },
            'delete-step': function(e) {
                let self = this
                wepy.showModal({
                    title: '提示',
                    content: '删除步骤之后将无法恢复，确定删除该步骤？',
                    success: function(res) {
                        if (res.confirm) {
                            deleteArrange(e.FlnkID).then(res => {
                                let index = self.datalist.findIndex(item => item.FlnkID === e.FlnkID)
                                self.datalist.splice(index, 1)
                                this.isChanged = true
                                self.$apply()
                                self.$com['step-list'].$apply()
                            })
                        }
                    }
                })
            },
            'check-change': function() {
                this.isChanged = true
            }
        }

        watch = {
            'isUserLeader': function(val) {
                if (val && !this.queryParam) {
                    this.stepEditable = true
                } else {
                    this.stepEditable = false
                }
            },
            'queryParam': function(val) {
                if (!val && this.isUserLeader) {
                    this.stepEditable = true
                } else {
                    this.stepEditable = false
                }
            }
        }

        init() {
            let activeGroupInfo
            if (this.queryParam) {
                activeGroupInfo = this.queryParam
            } else {
                activeGroupInfo = wepy.getStorageSync('activeTaskInfo')
            }
            this.currentGroupInfo = activeGroupInfo
            getGroupDetail(activeGroupInfo.GroupFID).then(res => {
                let leaderId = res.GroupLeader
                this.isUserLeader = leaderId === this.$parent.globalData.userInfo.FlnkID
                this.$apply()
            })
            getCourseArrangeList(activeGroupInfo.CourseFID, activeGroupInfo.GroupFID).then(res => {
                this.datalist = res
                this.$apply()
            })
            isStuInCourseGroup(this.$parent.globalData.userInfo.FlnkID, activeGroupInfo.CourseFID, activeGroupInfo.GroupFID).then((res) => {
                this.isStuInGroup = res
                this.$apply()
            }, () => {
                this.isStuInGroup = false
                this.$apply()
            })
        }

        onLoad(option) {
            if (option && option.courseId) {
                this.queryParam = {
                    CourseFID: option.courseId,
                    GroupFID: option.groupId
                }
                this.navigateUrlMap = {
                    prevKnow: '/practice/pages/prevKnow?courseId=' + option.courseId + '&groupId=' + option.groupId,
                    practice: '/practice/pages/reviewFinishTask?courseId=' + option.courseId + '&groupId=' + option.groupId,
                    practiceOpenType: 'redirect',
                    think: '/practice/pages/think?courseId=' + option.courseId + '&groupId=' + option.groupId
                }
                this.$apply()
            }
            this.isTeacher = (this.$parent.globalData.userInfo.RoleNum + '') === '2'
            this.init()
        }
    }
</script>

<style>
    .arrange-container {
        text-align: left;
    }

    .nav {
        display: flex;
        justify-content: center;
        flex-direction: row;
        border-bottom: 1px solid #efefef;
        text-align: center;
    }

    .nav navigator {
        flex: 1;
    }
    .button-block {
        position: fixed;
        width: 100%;
        height: 160rpx;
        background: #fff;
        bottom: 0;
        left: 0;
    }
    .button-block .btn {
        width: 50%;
    }
    scroll-view {
        width: 100%;
        height: calc(100vh - 240rpx);
    }
    .disable-edit scroll-view {
        height: calc(100vh - 80rpx);
    }
    .add-step-dialog .dialog-btn {
        margin-top: 20rpx;
    }
    .add-step-dialog .content input {
        height:90rpx;
        width:100%;
        border:1px solid #dedede;
        border-radius:10rpx;
        padding:10rpx 20rpx;
        box-sizing:border-box;
        margin-top: 20rpx;
    }
    .add-step-dialog .content textarea {
        margin-top: 10rpx;
        border:1px solid #dedede;
        border-radius: 10rpx;
        width:100%;
        height: 450rpx;
        padding: 10rpx 20rpx;
        box-sizing:border-box;
    }
</style>
