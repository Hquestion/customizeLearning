<template>
    <view class="home-container">
        <view class="content-main">
            <view class="nav">
                <navigator url="/practice/pages/prevKnow?courseId={{CourseFID}}&groupId={{GroupFID}}" open-type="redirect">早知道</navigator>
                <navigator url="/practice/pages/arrange?courseId={{CourseFID}}&groupId={{GroupFID}}" open-type="redirect">会安排</navigator>
                <navigator class="active">能落实</navigator>
                <navigator url="/practice/pages/think?courseId={{CourseFID}}&groupId={{GroupFID}}" open-type="redirect">有反思</navigator>
            </view>
            <view>
                <scroll-view class="chat-history" scroll-y scroll-into-view="{{messageId}}" style="height : {{ chatHistoryHeight }}" @scrolltoupper="onScrollUpper">
                    <repeat for="{{messages}}" index="index" item="item" key="index">
                        <chat-message :id="'message_' + item.MessageID" :msgData.sync="item" :isSelf="item.isSelf" :isShowMore="item.isShowMore" editable="{{false}}">
                        </chat-message>
                    </repeat>
                    <view class="teacher-remark-area" hidden="{{!remarkList || remarkList.length === 0}}">
                        <view class="grey">恭喜同学们，课程圆满结束，接下来老师给大家评分</view>
                        <repeat for="{{remarkList}}" item="item" index="index">
                            <remark-record :groupMember.sync="item"></remark-record>
                        </repeat>
                    </view>
                </scroll-view>
            </view>
        </view>
    </view>
</template>

<script>
    import wepy from 'wepy'
    import chatMessage from '../../components/chatMessage'
    import panel from '../../components/panel'
    import remarkTpl from '../../components/remark-tpl'
    import remarkRecord from '../../components/remark-record'

    import {getChatMsgByPage, getTeacherRemarkByGroup, isStuInCourseGroup} from '../../api'

    export default class ReviewPractice extends wepy.page {
        config = {
            navigationBarTitleText: '个性化学习中心'
        }

        data = {
            isTeacher: false,
            userInfo: null,
            chatHistoryHeight: 'calc(100vh - 88rpx)',
            moreActionShown: false,
            messageId: '',
            userInfoForMsg: {},
            messages: [],
            currentMsgsPageIndex: 1,
            haveMoreChatMsgs: true,
            CourseFID: '',
            GroupFID: '',
            isTeacherRemarked: false,
            remarkList: null,
            isStuInGroup: false
        }

        components = {
            'chat-message': chatMessage,
            panel: panel,
            'remark-tpl': remarkTpl,
            'remark-record': remarkRecord
        }

        computed = {

        }

        methods = {
            onScrollUpper(e) {
                // 向上滚动，加载更多数据
                if (this.haveMoreChatMsgs) {
                    this.currentMsgsPageIndex++
                    this.loadChatMsgByPage(this.currentMsgsPageIndex).then(res => {
                        let lastMessageId = this.messages[0].MessageID
                        this.messages = res.concat(this.messages)
                        this.messageId = 'message_' + lastMessageId
                        this.$apply()
                    })
                }
            }
        }

        events = {
            'hide-other-actions': function(e) {},
            'delete-msg': function(e) {}
        }

        scrollToCurrentMsg() {
            this.messageId = 'message_' + this.messages[(this.messages.length - 1)].MessageID
            this.$apply()
        }

        init() {
            this.initChatHistory()
            this.initTeacherRemark()
            isStuInCourseGroup(this.$parent.globalData.userInfo.FlnkID, this.CourseFID, this.GroupFID).then((res) => {
                this.isStuInGroup = res
                this.$apply()
            }, () => {
                this.isStuInGroup = false
                this.$apply()
            })
        }

        initChatHistory() {
            this.loadChatMsgByPage(1).then(res => {
                this.messages = [].concat(res)
                this.$apply()
                this.scrollToCurrentMsg()
            })
        }

        loadChatMsgByPage(pageIndex = 1) {
            return new Promise((resolve, reject) => {
                let userId = ''
                let RoleNum = null
                getChatMsgByPage(this.GroupFID, userId, RoleNum, pageIndex).then(res => {
                    if (res.PageCount <= this.currentMsgsPageIndex) {
                        this.haveMoreChatMsgs = false
                    } else {
                        this.haveMoreChatMsgs = true
                    }
                    let list = res.DataSource
                    let data = []
                    list.forEach(item => {
                        let msgBody = JSON.parse(item.MessageBody)
                        msgBody.isSelf = msgBody.FromUser === this.$parent.globalData.userInfo.FlnkID
                        data.unshift(msgBody)
                    })
                    resolve(data)
                }, res => {
                    this.haveMoreChatMsgs = true
                    reject(res)
                })
            })
        }

        initTeacherRemark() {
            getTeacherRemarkByGroup(this.GroupFID).then(res => {
                res = res || []
                res.forEach(item => {
                    item.modelList.forEach(cateitem => {
                        cateitem.ReflectName = cateitem.ReflectCategoryName
                        cateitem.modelList.forEach(subCateItem => {
                            subCateItem.ReflectItemName = subCateItem.ReflectContent
                            subCateItem.stuStarValue = subCateItem.StarValue || 0
                            subCateItem.StarValue = subCateItem.TotalStarValue - subCateItem.stuStarValue
                        })
                    })
                })
                this.remarkList = res || []
                this.$apply()
            }, res => {
                this.remarkList = []
                this.$apply()
            })
        }

        onLoad(option) {
            this.isTeacher = (this.$parent.globalData.userInfo.RoleNum + '') === '2'
            this.CourseFID = option.courseId
            this.GroupFID = option.groupId
            this.init()
        }

        onUnload() {}
    }
</script>

<style>
    .home-container {
        text-align: center;
    }
    .userinfo-avatar {
        width: 80rpx;
        height: 80rpx;
        border-radius: 80rpx;
    }
    .nav {
        display: flex;
        justify-content: center;
        flex-direction: row;
        border-bottom: 1px solid #efefef;
    }
    .nav navigator{
        flex: 1;
    }
    .step-tip {
        color: #ccc;
    }
    .chat-history {
        width:100%;
        height: calc(100vh - 250rpx);
        border-bottom: 1px solid #ccc;
        background: #f2f2f2;
    }
    .teacher-remark-area {
        padding: 30rpx;
        background: #f2f2f2;
    }
    .teacher-remark-area .grey {
        font-size: 25rpx;
    }
</style>
